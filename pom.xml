<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

 	<groupId>com.springreport</groupId>
    <artifactId>excel2pdf</artifactId>
    <name>excel2pdf</name>
    <packaging>jar</packaging>
    <version>2.0.0</version>
    <description>An easy way to convert Excel to PDF by Java code based on Apache POI and itextpdf.</description>

	<!-- <properties>
		<java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties> -->
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>5.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itext-asian</artifactId>
			<version>5.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.75</version>
		</dependency>
		<dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>4.5.11</version>
        </dependency>
	</dependencies>
  
    <build>
  		<resources>
	       <resource>
	          <directory>src/main/resources</directory>
	          <filtering>true</filtering>
	       </resource>
	    </resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>woff</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
						<nonFilteredFileExtension>eot</nonFilteredFileExtension>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						<nonFilteredFileExtension>svg</nonFilteredFileExtension>
						<nonFilteredFileExtension>docx</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.6.0</version>
                <executions>
                    <!-- 以下配置说明执行mvn的package命令时候，会执行proguard-->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <proguardVersion>7.1.0</proguardVersion>
                    <!-- 原始jar -->
                    <injar>excel2pdf-2.0.0.jar</injar>
                    <!-- 混淆后的jar -->
                    <outjar>test-pg.jar</outjar>
                    <!-- 是否混淆 默认是true -->
                    <obfuscate>true</obfuscate>
                    <!-- 是否将生成的PG文件安装部署 -->
                    <!--  <attach>true</attach> -->
                    <!--指定生成文件分类-->
                    <!--<attachArtifactClassifier>pg</attachArtifactClassifier>-->
                    <!-- 将pom.xml打包至jar文件中 -->
                    <addMavenDescriptor>true</addMavenDescriptor>
                    <!-- 混淆配置文件proguard.cfg 
                    <proguardInclude>${project.basedir}/proguard.cfg</proguardInclude>-->
                    <!-- 项目编译所需要的jar -->
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                    </libs>
                    <!-- 对输入jar进行过滤比如，如下配置就是对META-INFO文件不处理。 
                    <inLibsFilter>!META-INF/**,!META-INF/versions/9/**.class</inLibsFilter>-->
                    <!-- 输出路径配置，但是要注意这个路径必须要包括injar标签填写的jar -->
                    <outputDirectory>${project.basedir}/target</outputDirectory>
                    <!--配置混淆的一些细节选项，可在proguard.cfg中配置-->
                    <options>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>
                        <!-- 不做收缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>
                        <!-- 不混忽略非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>
                        <!--不用大小写混合类名机制-->
                        <option>-dontusemixedcaseclassnames</option>
                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>
                        <!-- 确定统一的混淆类的成员名称来增加混淆-->
                        <option>-useuniqueclassmembernames</option>
                        <!-- 保持目录结构-->
                        <option>-keepdirectories</option>
                        <!-- 不混淆所有包名-->
                        <!--<option>-keeppackagenames</option>-->
                        <!-- 混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代-->
                        <option>-adaptclassstrings</option>
                        <!-- 需要保持的属性：异常，注解等-->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
                        <!-- 此选项将保存所有软件包中的所有原始接口文件（不进行混淆） -->
                        <option>-keepnames interface ** { *; }</option>
                        <!-- 此选项将保存所有软件包中的所有原始接口文件（不进行混淆） -->
                        <option>-keep interface * extends * { *; }</option>
                        <!-- 保留参数名，因为控制器，或者Mybatis等接口的参数如果混淆会导致无法接受参数，xml文件找不到参数 -->
                        <option>-keepparameternames</option>
                        <!-- 保留枚举成员及方法 -->
                        <option>-keepclassmembers enum * { *; }</option>
                        <!-- 不混淆所有类,保存原始定义的注释 -->
                        <option>
                            -keepclassmembers class * {
                                @org.springframework.context.annotation.Bean *;
                                @org.springframework.beans.factory.annotation.Autowired *;
                                @org.springframework.beans.factory.annotation.Value *;
                                @org.springframework.stereotype.Service *;
                                @org.springframework.stereotype.Component *;
                                @org.springframework.web.bind.annotation.RestController *;  
                            }
                        </option>
                        <!-- 忽略warn消息  -->
                        <option>-ignorewarnings</option> -->
                        <!-- 忽略note消息  -->
                        <option>-dontnote</option> -->
                        <!-- 打印配置信息  -->
                        <option>-printconfiguration</option>
                        <!-- 不混淆controller入口类  
                        <option>-keep class com.platform.scamp.entity.** {*;}</option>
                        <option>-keep class com.platform.scamp.service.ScampVehicleTrackService {*;}</option>
                        <option>-keep class com.platform.scamp.controller.** {*;}</option>-->
                    </options>
                    <injarNotExistsSkip>true</injarNotExistsSkip>
                    <!-- 把jar包放到临时目录以便缩短命令行 -->
                    <putLibraryJarsInTempDir>true</putLibraryJarsInTempDir>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.guardsquare</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>7.1.0</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>com.guardsquare</groupId>
                        <artifactId>proguard-core</artifactId>
                        <version>7.1.0</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
		</plugins>
	</build>
</project>